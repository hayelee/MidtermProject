<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="chatRoom"> 

<!-- 
	이 영역에 SQL문에 맞는 태그를 사용하여 SQL문을 기술한다.
	
	사용할 수 있는 기본적인 태그들
	
	<select> ~~~ </select>
	<insert> ~~~ </insert>
	<update> ~~~ </update>
	<delete> ~~~ </delete>
	위 태그에서 사용되는 속성들
	
	1) id속성 : 해당 태그를 호출할 때 <mapper> 태그의 namespace와 연결하여 사용하는 이름.
	2) parameterType 속성 : SQL문에 사용될 데이터가 들어있는 객체타입 지정
						  (보통 VO클래스, 자바의 자료형이름 등이 사용됨.)
						  (typeAlias로 지정한 alias명을 사용할 수 있다.)
	3) resultType 속성 : selete문을 실행한 결과를 담을 객체타입을 지정한다.
					      (보통 VO클래스, 자바의 자료형이름 등이 사용됨.)
					      (typeAlias로 지정한 alias명을 사용할 수 있다.)
	4) resultMap 속성 : 결과 레코드 컬럼명과 VO객체의 property명이 다를 경우에 적절한 매핑을 위해 사용한다.				     						  
	
 -->

	<insert id="insertChatRoom" parameterType="ChatVO">
	
		INSERT INTO CHAT (CHAT_ID, MEM_ID, BOARD_ID, CHAT_CONTENTS, CHAT_SENDDATE, CHAT_CHECK) VALUES (CHATID.NEXTVAL, #{memId}, #{boardId}, #{chatContents}, SYSDATE, 1)
	
	</insert>
	
	<!-- 대화목록 방 정보 -->
	<select id="chatRoom" resultType="ChatVO">
		SELECT A.CHAT_ID, A.MEM_ID, A.BOARD_ID, A.CHAT_CONTENTS, A.CHAT_SENDDATE, A.CHAT_CHECK
		     , (SELECT C.MEM_NIC FROM MEMBER C WHERE C.MEM_ID = A.MEM_ID) MEM_NIC
		FROM   CHAT A
		WHERE  A.CHAT_ID = (
		        SELECT MAX(B.CHAT_ID)
		        FROM   CHAT B
		        WHERE  B.BOARD_ID = A.BOARD_ID
		    )
		ORDER BY A.CHAT_ID DESC
	</select>
	
	<!-- 대화목록 상세 -->
	<select id="chatList" parameterType="hashMap" resultType="ChatVO">
	
		SELECT A.CHAT_ID, A.MEM_ID, A.BOARD_ID, A.CHAT_CONTENTS, A.CHAT_SENDDATE, A.CHAT_CHECK
		     , B.MEM_NIC, B.PROFILE, (SELECT C.MEM_ID FROM BOARD C WHERE C.BOARD_ID = A.BOARD_ID) LOGIN_USER
		FROM   CHAT A, MEMBER B
		WHERE  A.MEM_ID = B.MEM_ID
		AND    A.BOARD_ID = #{boardId}
<!-- 		AND    (SELECT C.MEM_ID FROM BOARD C WHERE C.BOARD_ID = A.BOARD_ID) = #{loginUser} -->
		ORDER BY A.CHAT_ID ASC
	
	</select>
	
	<select id="searchChatRoom" parameterType="ChatVO">
	
		SELECT * FROM CHAT WHERE Board_Id = #{boardId} AND MEM_ID = #{memId}
	
	</select>
	
	<delete id="deleteChatRoom" parameterType="String">
		
		DELETE FROM CHAT WHERE BOARD_ID=#{boardId}
		
	</delete>
	
	<!-- boardId에 대해 채팅한 상대방 추출 -->
	<select id="selectChatMember" parameterType="BoardVO" resultType="MemberVO">
		SELECT distinct MEM_ID FROM CHAT WHERE NOT MEM_ID IN(#{memId}) and board_id = #{boardId}
	</select>

	
</mapper>