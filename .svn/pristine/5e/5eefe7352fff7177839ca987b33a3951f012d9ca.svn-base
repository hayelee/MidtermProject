<%@page import="chat.service.ChatRoomServiceImpl"%>
<%@page import="chat.service.IChatRoomService"%>
<%@page import="chat.vo.ChatVO"%>
<%@page import="member.vo.MemberVO"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!-- <link href="../WebContent/chat.css" rel="stylesheet" type="text/css"> -->
<link rel="stylesheet" type="text/css"
   href="<%=request.getContextPath()%>/css/chat/chat.css" />

<%

	String boardId = request.getParameter("boardId");
	String memIdBuy = request.getParameter("memIdBuy");
	String memIdSell = request.getParameter("memIdSell");
	
	System.out.println("boardId: " + boardId + " memIdBuy: " + memIdBuy + " memIdSell: " + memIdSell);
	
%>

<div class="container">
	<div class="messaging">
		<div class="inbox_msg">
			<div class="inbox_people">
			<div class="headind_srch">
				<div class="recent_heading">
            	<h4>대화목록</h4>
            	</div>
            	 <div class="srch_bar">
            	 <div class="stylish-input-group">
	                <input type="text" class="search-bar"  placeholder="Search" >
	                <span class="input-group-addon">
	                <button type="button"> <i class="fa fa-search" aria-hidden="true"></i> </button>
                </span> </div>
            	 </div>
			</div>
			<div class="inbox_chat">
				<div class="chat_list active_chat">
					<div class="chat_people">
						<div class="chat_img"> <img class="profile" src="/assets/basicProfile.png" alt="sunil"> </div>
						<div class="chat_ib">
	                 		<h5>Sunil Rajput <span class="chat_date">Dec 25</span></h5>
	                 		<p>Test, which is a new approach to have all solutions 
	                    		astrology under one roof.</p>
	               		</div>
					</div>
				</div>
			</div>
			</div>
			<div class="mesgs">
				
					<input type="hidden" id="roomName" value="<%=boardId%>">
				
				<div>
					<input type="hidden" id="username" value="${memberVO.memNic}">
				</div>
				<!-- 메시지 표시 영역 -->
				<div>
				<div class="msg_history">
					<textarea  style="width:100%;height:100%;border:none;" class="msg_history" id="messageTextArea" readonly="readonly" rows="10"
						cols="45"></textarea>
				</div>
				</div>
				<div>
					<!-- 송신 메시지 텍스트박스 -->
					<div class="type_msg">
            		<div class="input_msg_write">
             		 <input type="text" id="messageText" class="write_msg" placeholder="메시지를 입력하세요." />
					<!-- 송신 버튼 -->
              		<button id="sendBtn" class="msg_send_btn" type="button" disabled="disabled"><i class="fa fa-paper-plane-o" aria-hidden="true"></i></button>
            		</div>
          			</div>
				</div>
			</div>
		</div>
			<p class="text-center top_spac">Design by <a target="_blank" href="https://www.linkedin.com/in/sunil-rajput-nattho-singh/">SunilRajput</a></p>
	</div>
</div>
<script type="application/javascript">
    "use strict";

    let Chat = {};

    Chat.socket = null;

    Chat.connect = (function (host) {
        if ('WebSocket' in window) {
            Chat.socket = new WebSocket(host);
        } else if ('MozWebSocket' in window) {
            Chat.socket = new MozWebSocket(host);
        } else {
            Console.log('Error: WebSocket을 지원하지 않는 브라우저입니다');
            return;
        }
		
        Chat.socket.onopen = function () {
            Console.log('Info: WebSocket이 연결되었습니다.');
            document.getElementById('username').onkeyup = function (event) {
                if (event.keyCode === 13) {
                    Chat.socket.send(document.getElementById('username').value);
                }
            };
            document.getElementById('messageText').onkeyup = function (event) {
                if (event.keyCode === 13) {
                    Chat.sendMessage();
                }
            };
            document.getElementById('sendBtn').disabled = false;
            document.getElementById('sendBtn').onclick = function () {
                Chat.sendMessage();
            };
        };
		
        Chat.socket.onclose = function () {
            document.getElementById('username').onkeyup = null;
            document.getElementById('messageText').onkeyup = null;
            document.getElementById('sendBtn').disabled = true;
            Console.log('Info: WebSocket이 닫혔습니다.');
        };

        Chat.socket.onmessage = function (message) {
            Console.log(message.data);
        };
    });
	
    Chat.initialize = function () {
        let roomName = document.getElementById('roomName').value;
        let username = document.getElementById('username').value;
        Chat.connect('ws' + '://' + window.location.host + '/DaangnProject/chat/' + roomName + '/' + username);
        console.log('initialize')
    };
	
    Chat.sendMessage = function () {
        let message = document.getElementById('messageText').value;
        if (message !== '') {
            Chat.socket.send(message);
            document.getElementById('messageText').value = '';
        }
    };
	
    let Console = {};
	
    // 메세지 보여주는 메소드
    Console.log = (function (message) {
        let console = document.getElementById('messageTextArea');
        console.value += message + '\n';
        // 화면이 가장 아래로 내려갔을 때 대화 화면을 위로 올려준다.
        console.scrollTop = console.scrollHeight;
    });
	
    Chat.initialize();
	
//    	// 채팅목록 출력하기
//     var v_ajax = new XMLHttpRequest();

//     v_ajax.open("get","dummy.txt",true);

//     v_ajax.onreadystatechange=function(){
//         console.log(v_ajax.readyState);
//         if(v_ajax.readyState == 4 && v_ajax.status == 200){
//             console.log(v_ajax.responseText);
//         }else{
//                 console.log('실패')
//           }
//     }

//     v_ajax.send();

</script>
